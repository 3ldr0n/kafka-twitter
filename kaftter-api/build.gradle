plugins {
    id "jacoco"
    id "org.sonarqube" version "3.0"
    id "org.jetbrains.kotlin.jvm" version "1.4.20"
    id "org.springframework.boot" version "2.4.0"
    id "org.jetbrains.kotlin.plugin.spring" version "1.4.20"
    id "io.spring.dependency-management" version "1.0.10.RELEASE"
}

group = 'kaftter'
version = '1.0'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.springframework.boot:spring-boot-starter-data-cassandra"
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "com.datastax.oss:java-driver-core:4.9.0"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "org.jetbrains.kotlin:kotlin-reflect"
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin"
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
    testImplementation("org.springframework.boot:spring-boot-starter-test") {
        exclude group: "org.junit.vintage", module: "junit-vintage-engine"
        exclude group: "org.mockito", module: "mockito"
    }
    testImplementation "io.mockk:mockk:1.10.3"
    testImplementation "com.ninja-squad:springmockk:3.0.0"
}

test {
    useJUnitPlatform()
}

compileKotlin {
    kotlinOptions.jvmTarget = "11"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "11"
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
}

sonarqube {
    properties {
        property "sonar.projectName", "kaftter-api"
        property "sonar.projectKey", "3ldr0n_kaftter-api"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.organization", "3ldr0n"
        property "sonar.exclusions", "**/KaftterApiApplication.kt"
    }
}

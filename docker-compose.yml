version: '3.3'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:5.5.0
    container_name: kaftter_zookeeper
    restart: always
    hostname: zookeeper
    domainname: zookeeper.local.kaftter
    ports:
      - 2181:2181
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      kaftternet:
        aliases:
          - zookeeper.local.kaftter

  kafka:
    image: confluentinc/cp-kafka:5.5.0
    container_name: kaftter_kafka
    hostname: kafka
    domainname: kafka.local.kaftter
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    networks:
      kaftternet:
        aliases:
          - kafka.local.kaftter

  schemaregistry:
    image: confluentinc/cp-schema-registry:5.1.2
    container_name: kaftter_schemaregistry
    hostname: schemaregistry
    domainname: schemaregistry.local.kaftter
    restart: always
    depends_on:
      - zookeeper
    ports:
      - 8081:8081
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: "zookeeper:2181"
      SCHEMA_REGISTRY_HOST_NAME: schemaregistry
      SCHEMA_REGISTRY_LISTENERS: "http://0.0.0.0:8081"
    networks:
      kaftternet:
        aliases:
          - schemaregistry.local.kaftter

  cassandra:
    image: cassandra:3.11.5
    container_name: kaftter_cassandra
    hostname: cassandra
    domainname: cassandra.local.kaftter
    ports:
      - "9042:9042"
    environment:
      - "MAX_HEAP_SIZE=256M"
      - "HEAP_NEWSIZE=128M"
      - "CASSANDRA_USER=cassandra"
      - "CASSANDRA_PASSWORD=cassandra"
    volumes:
      - "./deploy/local/scripts/cassandra/create-keyspace.sh:/create-keyspace.sh"
    command: "sh /create-keyspace.sh"
    networks:
      kaftternet:
        aliases:
          - cassandra.local.kaftter

  kaftter-api:
    domainname: kaftter-api.local.kaftter
    container_name: kaftter_api
    build: kaftter-api/
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - cassandra
    ports:
      - 8888:8888
    networks:
      kaftternet:
        aliases:
          - kaftter-api.local.kaftter

  kaftter-consumer:
    domainname: kaftter-consumer.local.kaftter
    container_name: kaftter_consumer
    build: kaftter-consumer/
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - kafka
      - schemaregistry
      - kaftter-api
    ports:
      - 8079:8079
    networks:
      kaftternet:
        aliases:
          - kaftter-consumer.local.kaftter

networks:
  kaftternet:
